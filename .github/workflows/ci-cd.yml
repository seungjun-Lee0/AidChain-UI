name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm install
        
      - name: Install Solhint
        run: npm install -g solhint
        
      - name: Lint Solidity
        run: solhint 'Assessment3.sol'
        
      - name: Install Hardhat
        run: npm install --save-dev hardhat
        
      - name: Create Hardhat config if not exists
        run: |
          if [ ! -f hardhat.config.js ]; then
            cp hardhat.config.js.sample hardhat.config.js || echo "// Hardhat config" > hardhat.config.js
          fi
        
      - name: Test smart contracts
        run: |
          if [ -d "test" ] && [ "$(ls -A test)" ]; then
            npx hardhat test
          else
            echo "No tests found, skipping test step"
          fi
        
  deploy:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm install
        
      - name: Build frontend
        run: |
          if [ -f "package.json" ] && grep -q "build" "package.json"; then
            npm run build
          else
            echo "No build script found, skipping build step"
          fi
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod' 